3+4
message = "Hello Python world!"
print(message)
mesage = "Hello Python Crash Course world!"
print(mesage)
library(phytools)
tree<-read.tree(
text="(Fox_squirrel,(Ground_squirrel,(Eastern_grey_squirrel,Western_grey_squirrel)));")
plotTree(tree)
plotTree(tree,direction="upwards")
plotTree(tree,direction="upwards",lwd=4,col="grey")
plotTree(tree,direction="upwards",lwd=4,color="grey")
plotTree(tree,direction="upwards",lwd=10,color="grey")
plotTree(tree,direction="upwards",lwd=10,color="grey",fsize=6)
plotTree(tree,direction="upwards",lwd=10,color="grey",fsize=1.2)
library(phytools)
tree<-read.tree(
text="(Fox_squirrel,(Ground_squirrel,(Eastern_grey_squirrel,Western_grey_squirrel)));")
tree<-compute.brlen(tree)
plotTree(tree,direction="upwards",lwd=10,color="grey",fsize=1.2)
library(phytools)
tree<-read.tree(
text="(Fox_squirrel,(Ground_squirrel,(Eastern_grey_squirrel,Western_grey_squirrel)));")
tree<-compute.brlen(tree)
tree$edge.length<-tree$edge.length/max(nodeHeights(tree))
plotTree(tree,direction="upwards",lwd=10,color="grey",fsize=1.2)
DNA<-genSeq(tree,10)
DNA
DNA<-genSeq(tree,10,format="matri")
DNA<-genSeq(tree,10,format="matrix")
DNA
dist.dna(DNA)
dist.dna(as.DNAbin(DNA))
args(dist.dna)
?dist.dna
DNA<-genSeq(tree,10,format="matrix",model="raw")
dist.dna(as.DNAbin(DNA),,model="raw")
tree$edge.length<-tree$edge.length/max(nodeHeights(tree))*0.2
plotTree(tree,direction="upwards",lwd=10,color="grey",fsize=1.2)
DNA<-genSeq(tree,10,format="matrix")
DNA
dist.dna(as.DNAbin(DNA),,model="raw")
DNA<-toupper(genSeq(tree,10,format="matrix"))
DNA
DNA
dist.dna(as.DNAbin(DNA),,model="raw")
library(phytools)
tree<-read.tree(
text="(Fox_squirrel,(Ground_squirrel,(Eastern_grey_squirrel,Western_grey_squirrel)));")
tree<-compute.brlen(tree)
tree$edge.length<-tree$edge.length/max(nodeHeights(tree))*0.2
plotTree(tree,direction="upwards",lwd=10,color="grey",fsize=1.2)
DNA<-toupper(genSeq(tree,10,format="matrix"))
DNA
dist.dna(as.DNAbin(DNA),,model="raw")
apply(DNA,1,paste,collapse="")
matrix(apply(DNA,1,paste,collapse=""))
matrix(apply(DNA,1,paste,collapse=""),drop=FALSE)
apply(DNA,1,paste,collapse="",drop=FALSE)
apply(DNA,1,paste,collapse="")
as.matrix(apply(DNA,1,paste,collapse=""))
plotTree(tree,direction="upwards",lwd=10,color="grey",fsize=2)
plotTree(tree,direction="upwards",lwd=10,color="grey",fsize=1.8)
plotTree(tree,direction="upwards",lwd=10,color="grey",fsize=1.8)
plotTree(tree,lwd=10,color="grey",fsize=1.8)
plotTree(tree,lwd=10,color="grey",fsize=1.8)
dist.dna(as.DNAbin(DNA),,model="raw")
DN
DNA
DNA[1,3]<-"T"
dist.dna(as.DNAbin(DNA),,model="raw")
DNA
DNA[1,6]<-"T"
dist.dna(as.DNAbin(DNA),,model="raw")
library(phangorn)
data(Laurasiatherian)
dm <- dist.ml(Laurasiatherian)
tree <- NJ(dm)  # Neighbor-Joining tree
fit <- pml(tree, Laurasiatherian)  # Initial likelihood model
logLik(fit)  # Get the log-likelihood
fit_opt <- optim.pml(fit, optNni=TRUE, optBf=TRUE, optQ=TRUE)
logLik(fit_opt)  # Improved log-likelihood
pml.free(fit)
?pmlFree
update.packages("BioConductor")
install.packages("BioConductor")
BiocManager::install()
install.packages("BiocManager")
BiocManager::install()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.20")
install.packages("phytools",force=TRUE)
0.25^2
tree<-rtree(n=10)
phy<-rtree(n=10)
library(phytools)
phy<-rtree(n=10)
plotTree(phy)
edgelabels(round(phy$edge.length,4))
tip_lengths<-phy$edge.length[which(phy$edge[,2]<=Ntip(phy))]
tip_lengths
getwd()
setwd("manuscripts/Revell-and-Harmon.fitgammaMk/revision/")
load("data/alphaRESULTS.rda")
ls()
